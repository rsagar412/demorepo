<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<html>
<head><title>Spark POC</title></head>
<body>
    <h1>Compare Result:</h1>
    <h2>File Record Count: ${result.fileRecordCount}</h1>
    <h2>Time took to processed: ${result.timeToProcessed}</h1>
    <ul>
        <h2>Matched:</h1>
        <c:forEach var="matchedRecord" items="${result.matchedRecords}">
            <li>${matchedRecord.mid} - ${matchedRecord.sbiOrderRefNumber} - ${matchedRecord.atrnNum}</li>
        </c:forEach>
    </ul>
    <ul>
        <h2>Unmatched:</h1>
        <c:forEach var="unMatchedRecord" items="${result.unMatchedRecords}">
            <li>
            <c:choose>
                <c:when test="${unMatchedRecord.isNew()}">New</c:when>
                <c:otherwise>Updated</c:otherwise>
            </c:choose>
             Record - ${unMatchedRecord.dbMerchantOrderPayment.mid} - ${unMatchedRecord.dbMerchantOrderPayment.sbiOrderRefNumber} - ${unMatchedRecord.dbMerchantOrderPayment.atrnNum}</li>
        </c:forEach>
    </ul>
</body>
</html>



getting the below error 

Whitelabel Error Page
This application has no explicit mapping for /error, so you are seeing this as a fallback.

Sat May 31 12:43:39 IST 2025
There was an unexpected error (type=Not Found, status=404).


this is my main class - 

@SpringBootApplication
@ClientCacheApplication
@EnableEntityDefinedRegions(basePackages = "com.sbi.epay.cache.admin.entity")
@EnableGemfireRepositories(basePackages = "com.epay.rns.repository.cache")
public class ReconSettlementServiceApplication {

	public static void main(String[] args) {
		SpringApplication.run(ReconSettlementServiceApplication.class, args);
	}

}



and this is my controller

@Controller
@Slf4j
@RequiredArgsConstructor
public class SparkController {
    private final SparkService sparkService;
    @GetMapping("/")
    public String home(Model model) {
        model.addAttribute("message", "Welcome to JSP with Spring Boot and Spark!");
        ResponseDto responseDto = sparkService.process();
        model.addAttribute("result", responseDto);
        return "home";
    }


this is my servlet configuration

server:
  servlet:
    context-path: /api/rns/v1/
    jsp:
      init-parameters:
        development: true
  port: 9097
